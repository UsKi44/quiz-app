[{"C:\\Users\\datua\\Desktop\\quiz-app\\src\\index.js":"1","C:\\Users\\datua\\Desktop\\quiz-app\\src\\App.js":"2","C:\\Users\\datua\\Desktop\\quiz-app\\src\\components\\Header.js":"3","C:\\Users\\datua\\Desktop\\quiz-app\\src\\components\\Body.js":"4","C:\\Users\\datua\\Desktop\\quiz-app\\src\\components\\Quiz.js":"5","C:\\Users\\datua\\Desktop\\quiz-app\\src\\components\\FinalPage.js":"6"},{"size":198,"mtime":1610479259194,"results":"7","hashOfConfig":"8"},{"size":624,"mtime":1610814113915,"results":"9","hashOfConfig":"8"},{"size":596,"mtime":1610806350135,"results":"10","hashOfConfig":"8"},{"size":2705,"mtime":1610806566638,"results":"11","hashOfConfig":"8"},{"size":3246,"mtime":1610823505106,"results":"12","hashOfConfig":"8"},{"size":490,"mtime":1610823535213,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"3y7mq9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\datua\\Desktop\\quiz-app\\src\\index.js",[],["28","29"],"C:\\Users\\datua\\Desktop\\quiz-app\\src\\App.js",[],"C:\\Users\\datua\\Desktop\\quiz-app\\src\\components\\Header.js",[],"C:\\Users\\datua\\Desktop\\quiz-app\\src\\components\\Body.js",["30"],"import React,{useState,useEffect} from \"react\";\r\nimport \"./styles/body.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction Body() {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [select, setSelect] = useState(9);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [difficulty, setDifficulty] = useState('easy');\r\n\r\n    const categoryUrl = \"https://opentdb.com/api_category.php\";\r\n\r\n    useEffect(() => {\r\n        fetch(`https://opentdb.com/api.php?amount=10&category=${select}&difficulty=easy&type=multiple`)\r\n        .then(response => response.json())\r\n        .then(json => setQuestions(json));\r\n        \r\n        fetch(categoryUrl)\r\n        .then(response => response.json())\r\n        .then(json => setCategories(json.trivia_categories));\r\n        \r\n    }, [select])\r\n    \r\n\r\n\r\n    const selectHandler = (e) => {\r\n        let index = e.target.selectedIndex;\r\n        let optionElement = e.target.childNodes[index]\r\n        let option =  optionElement.getAttribute('data-id'); \r\n\r\n        setSelect(option);\r\n    }\r\n\r\n     \r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"body_syze\">\r\n\r\n            <div className=\"container\">\r\n                <label htmlFor=\"category\" className=\"category_container\">                \r\n                    <select name=\"category\" className=\"category_selector\" id=\"categorySelector\" onChange={(e) => selectHandler(e)}>\r\n                        {\r\n                            categories.map(category => {\r\n                                return <option value={category.name} data-id={category.id} key={category.id}> {category.name} </option> \r\n                            })\r\n                            \r\n                        }\r\n                        \r\n                    </select>\r\n                </label>\r\n                <label htmlFor=\"difficulty\" className=\"difficulty_container\" id=\"difficulty\">\r\n                    <select name=\"difficulty\" className=\"difficulty_selector\" id=\"difficultySelector\" onChange={(e) => setDifficulty(e.target.value)} >\r\n                        <option>Easy</option>\r\n                        <option>Medium</option>\r\n                        <option>Hard</option>  \r\n                    </select>\r\n                </label>\r\n                {/* <Link to=\"/Quiz\"  className=\"button_link\"> */}\r\n                    <Link to={`/Quiz?category=${select}&difficulty=${difficulty}`}  className=\"button_link\" >\r\n                        <button className=\"start\" id=\"startGame\" >\r\n                            Start Game     \r\n                        </button>\r\n                    </Link>\r\n            </div>\r\n\r\n            \r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Body;","C:\\Users\\datua\\Desktop\\quiz-app\\src\\components\\Quiz.js",["31","32","33","34"],"C:\\Users\\datua\\Desktop\\quiz-app\\src\\components\\FinalPage.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":12,"column":12,"nodeType":"41","messageId":"42","endLine":12,"endColumn":21},{"ruleId":"39","severity":1,"message":"43","line":10,"column":12,"nodeType":"41","messageId":"42","endLine":10,"endColumn":26},{"ruleId":"39","severity":1,"message":"44","line":12,"column":12,"nodeType":"41","messageId":"42","endLine":12,"endColumn":25},{"ruleId":"45","severity":1,"message":"46","line":53,"column":25,"nodeType":"47","messageId":"48","endLine":53,"endColumn":27},{"ruleId":"45","severity":1,"message":"49","line":55,"column":26,"nodeType":"47","messageId":"48","endLine":55,"endColumn":28},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'questions' is assigned a value but never used.","Identifier","unusedVar","'checkedAnswers' is assigned a value but never used.","'correctAnswer' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]